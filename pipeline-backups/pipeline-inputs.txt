--------------------------------------------
# Terraform State Storage Azure RM
Resource Group: terraform-storage-rg
Storage Account: terraformstateamt
Container: tfstatefiles

# Manifests Folder
terraform-manifests

# System Default Working Directory
$(System.DefaultWorkingDirectory)/terraform-manifests
$(Pipeline.Workspace)/terraform-manifests-out
# List Files
- bash: echo Contents in Pipeline Workspace Artifact Directory; ls -Ra $(System.DefaultWorkingDirectory)/terraform-manifests
--------------------------------------------
# Environment Name
$(TEST_ENVIRONMENT)

# Test State File Name
aks-$(TEST_ENVIRONMENT).tfstate

# Pipeline Working Directory
$(Pipeline.Workspace)/terraform-manifests-out

# TEST Command Arguments for Terraform Plan
-var ssh_public_key=$(sshkey.secureFilePath) 
-var environment=$(TEST_ENVIRONMENT) 
-out $(Pipeline.Workspace)/terraform-manifests-out/$(TEST_ENVIRONMENT)-$(Build.BuildId).out

# 1- way
terraform plan
terraform apply

# 2-way
terraform plan -out v1plan.out
terraform apply v1plan.out


# Test Command Arguments for Terraform Apply
$(Pipeline.Workspace)/terraform-manifests-out/$(TEST_ENVIRONMENT)-$(Build.BuildId).out

# List Files
- bash: echo Contents in Pipeline Workspace Artifact Directory; ls -Ra $(Pipeline.Workspace)/terraform-manifests-out    
--------------------------------------------
# Environment Name
$(PROD_ENVIRONMENT)

# PROD State File
aks-$(PROD_ENVIRONMENT).tfstate

# Pipeline Working Directory
$(Pipeline.Workspace)/terraform-manifests-out

# PROD_ENVIRONMENT Command Arguments for Terraform Plan
-var ssh_public_key=$(sshkey.secureFilePath) 
-var environment=$(PROD_ENVIRONMENT) 
-out $(Pipeline.Workspace)/terraform-manifests-out/$(PROD_ENVIRONMENT)-$(Build.BuildId).out

# PROD Command Arguments for Terraform Apply
$(Pipeline.Workspace)/terraform-manifests-out/$(PROD_ENVIRONMENT)-$(Build.BuildId).out
--------------------------------------------

